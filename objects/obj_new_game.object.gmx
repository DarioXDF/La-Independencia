<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name_set = 0
name = ""
lchar = 0
ii = 1
input_abfrage = 0
input = 0
vk_input = 0

for(i = 0; i&lt;20; i++)
{
    pos[i] = 0
}

pos[20] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_get_input()
if(input != 0 &amp;&amp; ii != 22 )
{
    switch(ii)
    {
        case ii:
            if(ii != 21) pos[ii - 1] = input
        break;
    }
    input = 0
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(50,50,"Enter user Name:")
draw_text(200,52,"_")
draw_text(215,52,"_")
draw_text(230,52,"_")
draw_text(245,52,"_")
draw_text(260,52,"_")
draw_text(275,52,"_")
draw_text(290,52,"_")
draw_text(305,52,"_")
draw_text(320,52,"_")
draw_text(335,52,"_")
draw_text(350,52,"_")
draw_text(365,52,"_")
draw_text(380,52,"_")
draw_text(395,52,"_")
draw_text(410,52,"_")
draw_text(425,52,"_")
draw_text(440,52,"_")
draw_text(455,52,"_")
draw_text(470,52,"_")
draw_text(485,52,"_")

draw_text(200,72,name)
draw_text(146,72,"Name:")



scr_main_menu("none",1,20)
//enter name
if(keyboard_check_pressed(vk_enter))
{
    if(name_set = 1)
    {
        name = ""
    }
    for(i = 0; i&lt;20; i++)
    {
        if(pos[i] != 0)
        {
            lchar++
        }
    }

    for(i = 0; i&lt;lchar; i++)
    {
        name = string(name) + string(pos[i])
    }
    name_set = 1
    lchar = 0
    
    global.name = name
    room_goto(1)
}
//Remove
if(keyboard_check_pressed(vk_backspace) &amp;&amp; ii != 1 )
{
    
    pos[ii - 2] = 0  
    ii--
    
    
}
//move in array
if(pos[ii - 1] != 0)
{

    if(ii != 21) ii++
    
}

    

switch(ii)
{
    case ii:
        if(ii - 1 = 0) draw_text(200 ,50,"|") else draw_text(200 + 15 * (ii - 1),50,"|")
    break;
}


//Draw Name
if(pos[0] != 0)
{
    draw_text(200  , 50, pos[0])
}

if(pos[1] != 0)
{
    draw_text(200 + 15 * (2 - 1), 50, pos[1])
}

if(pos[2] != 0)
{
    draw_text(200 + 15 * (3 - 1), 50, pos[2])
}

if(pos[3] != 0)
{
    draw_text(200 + 15 * (4 - 1), 50, pos[3])
}

if(pos[4] != 0)
{
    draw_text(200 + 15 * (5 - 1), 50, pos[4])
}

if(pos[5] != 0)
{
    draw_text(200 + 15 * (6 - 1), 50, pos[5])
}

if(pos[6] != 0)
{
    draw_text(200 + 15 * (7 - 1), 50, pos[6])
}

if(pos[7] != 0)
{
    draw_text(200 + 15 * (8 - 1), 50, pos[7])
}

if(pos[8] != 0)
{
    draw_text(200 + 15 * (9 - 1), 50, pos[8])
}

if(pos[9] != 0)
{
    draw_text(200 + 15 * (10 - 1), 50, pos[9])
}

if(pos[10] != 0)
{
    draw_text(200 + 15 * (11 - 1), 50, pos[10])
}

if(pos[11] != 0)
{
    draw_text(200 + 15 * (12 - 1), 50, pos[11])
}

if(pos[12] != 0)
{
    draw_text(200 + 15 * (13 - 1), 50, pos[12])
}

if(pos[13] != 0)
{
    draw_text(200 + 15 * (14 - 1), 50, pos[13])
}

if(pos[14] != 0)
{
    draw_text(200 + 15 * (15 - 1), 50, pos[14])
}

if(pos[15] != 0)
{
    draw_text(200 + 15 * (16 - 1), 50, pos[15])
}

if(pos[16] != 0)
{
    draw_text(200 + 15 * (17 - 1), 50, pos[16])
}

if(pos[17] != 0)
{
    draw_text(200 + 15 * (18 - 1), 50, pos[17])
}

if(pos[18] != 0)
{
    draw_text(200 + 15 * (19 - 1), 50, pos[18])
}

if(pos[19] != 0)
{
    draw_text(200 + 15 * (20 - 1), 50, pos[19])   
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
